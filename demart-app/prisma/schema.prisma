generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String         @unique
  emailVerified DateTime?
  password      String
  image         String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  products      Product[]
  sentMessages     Message[]       @relation("SentMessages")
  receivedMessages Message[]       @relation("ReceivedMessages")
  conversations ConversationParticipant[]
}

model Product {
  id          String      @id @default(cuid())
  title       String
  description String?
  price       Float
  currency    String      @default("USDC")
  images      String[]
  location    String?
  sellerId    String
  seller      User        @relation(fields: [sellerId], references: [id], onDelete: Cascade)
  status      ProductStatus @default(ACTIVE)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  conversations Conversation[]
}

enum ProductStatus {
  ACTIVE
  SOLD
  INACTIVE
}

model Conversation {
  id          String      @id @default(cuid())
  productId   String?
  product     Product?    @relation(fields: [productId], references: [id], onDelete: SetNull)
  participants ConversationParticipant[]
  messages    Message[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model ConversationParticipant {
  id             String       @id @default(cuid())
  userId         String
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  createdAt      DateTime     @default(now())

  @@unique([userId, conversationId])
}

model Message {
  id             String       @id @default(cuid())
  content        String
  senderId       String
  sender         User         @relation("SentMessages", fields: [senderId], references: [id], onDelete: Cascade)
  receiverId     String
  receiver       User         @relation("ReceivedMessages", fields: [receiverId], references: [id], onDelete: Cascade)
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  isRead         Boolean      @default(false)
  type           MessageType  @default(TEXT)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

enum MessageType {
  TEXT
  IMAGE
  SYSTEM
}
